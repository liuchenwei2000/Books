明察throws子句的缺点


throws子句是一种语言机制，用来列出可从某个函数传至外界的所有可能异常。
编译器强迫调用者必须在函数中捕捉这些被列出的异常，否则就得在该函数的throws子句中声明它们。
throws子句用来向函数调用者发出预警，告知将会产生哪些异常，为函数调用者提供了有价值的信息。

将一个异常加入函数的throws子句，会影响该函数的每一个调用者――――所有调用这个函数的函数都需要修改。
它们将面临相同的两个选择：
1.在函数中捕获异常，并且就地处理。
2.从函数中抛出异常，让调用者处理它。

如果没有某个函数挺身而出处理该异常，这个过程会一路延续，直到上溯至main()才终了。

如果希望尽量降低遇到这个问题的几率，就不要在开发后期才添加异常的处理，在一开始就要设计好错误处理策略。