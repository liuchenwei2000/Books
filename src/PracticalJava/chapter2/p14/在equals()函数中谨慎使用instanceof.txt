在equals()函数中谨慎使用instanceof


真实世界中确实存在一些合情合理的考量，希望程序能够支持基类对象和派生类对象之间的相等性比较。
然而考虑到使用instanceof所引发的诸多问题，还是推荐在equals()实现代码中使用getClass()。
这样做就只允许同一个class所属的对象可被视为相等，进而消除了instanceof做法所带来的一切后续问题。

在equals()函数中面对getClass()和instanceof进行取舍时，要仔细斟酌以下问题：
1，如果只允许同一个class所产生的对象被视为相等，则通常使用getClass()。
2，只有在不得不对派生类对象与基类对象进行比较的场合中，才使用instanceof，要明白这样带来的可能问题和复杂度。
3，如果使用instanceof，而且派生类和基类都实现有equals()，则要注意，这种比较不会展现对称相等性。
即  base.equals(derived) 和  derived.equals(base)返回值未必相同。 
