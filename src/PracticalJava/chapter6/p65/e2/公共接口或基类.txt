
欲防止不变性被打破，另一个办法是使用公共的interface或者公共基类，以及两个派生类。组织如下：

1.一个interface或基类，其内声明一些可被其派生类共享的immutable函数。
2.一个派生类提供mutable函数实现代码。
3.另一个派生类提供immutable函数实现代码。

这样一来，使用到这些对象的函数可以在其签名式中指定使用：

1.mutable class――如果函数要求获得一个mutable object。
2.immutable class――如果函数需要保持不可变性。
3.中立的interface或基类，如果函数不在乎对象是否可变。

这种方案避免了e1中所暴露的转型问题，这些classes的不变性不会因为转型而流失。