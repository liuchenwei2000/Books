优先使用notifyAll()而非notify()


同步机制使得线程之间可以相互协作，不会在同一时刻访问某个对象。Java也允许事件通知机制。
当一个或多个线程期待某个特定事件发生时，很需要这种特性。

Java提供了wait()、notify()、notifyAll()函数，从而使事件通知变得更容易。
notify()和notifyAll()用以唤醒处于等待状态的线程，wait()则让线程进入等待状态。

notify()仅仅唤醒一个线程。
它的不足之处在于当多个线程处于等待状态，你无法预期被唤醒的是哪一个线程。
谁出线由JVM说了算，不受你的控制，JVM在挑选出线者的时候，并不一定以最高优先权为依据。

只有在两个前提下，使用notify()才是安全的：
1.只有一个线程正在等待，因此保证被唤醒的一定是它。
2.多个线程正等待同一条件的成立，哪个线程被唤醒都无所谓。

notifyAll()唤醒所有等待中的线程。
调用这个函数可以确保：只要你有一个线程正在等待某个条件，它就一定会被唤醒。

除非满足上述2个条件，否则使用notifyAll()更好一些，因为它保证唤醒所有等待中的线程。
记住，唤醒所有线程并非意味它们都会获得lock，而是意味它们都被唤醒，然后竞逐lock。

不幸的是，notify()和notifyAll()一样，没有提供调用者一个途径，指定以何种顺序唤醒线程。
唤醒顺序由JVM决定；除了保证所有等待中的线程都被唤醒之外，不作任何保证。线程未必以优先权顺序接获通知。