对于instance函数，synchronized锁定的是对象而不是函数或代码


关键词synchronized可用作函数修饰符，也可用作函数内的语句。

对于instance函数，关键词synchronized其实并不锁定函数或代码，它锁定的是对象。
记住，每个对象只有一个lock与之相关联。

当synchronized被当作函数修饰符的时候，它所取得的lock将被交给函数调用者(某对象)。
如果synchronized用于object reference，则取得的lock将被交给该reference所指对象。


对一个对象进行同步控制的意义？

它意味着调用synchronized函数之线程将会取得对象的lock，持有对象的lock，意味着另一个
通过synchronized函数(或语句)来申请对象lock的线程，在该lock被释放之前将无法获得满足。
然而如果另一个线程对对象所属类的另一个对象B调用相同的synchronized函数(或区块)，可以获得对象B的lock。
也就是说，synchronized函数(或区块)内的代码在同一时刻下可由多个线程执行――只要是对不同的对象调用该函数。

同步机制锁定的是对象，而不是函数或代码。函数或代码区段被声明为synchronized并非意味着它在同一时刻只能由一个线程执行。