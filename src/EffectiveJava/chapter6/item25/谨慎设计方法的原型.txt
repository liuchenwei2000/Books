                                                                                                                                           谨慎设计方法的原型


1，谨慎选择方法的名字。
要遵循标准的命名习惯；易于理解的，并且与同一个包中其他名字风格一致的名字；选择与大众普遍认可的名字相一致的名字。

2，不要过于追求便利的方法。
每一个方法都应该提供其应具备的功能点，方法太多会使一个类难以学习和使用。
对于一个类型所支持的每一个动作，都提供一个功能完全的方法。只有当一个操作被用的非常频繁的时候，才考虑为它提供一个快捷方法。

3，避免长长的参数列表。
通常三个参数应该被看做实践中的最大值，而且参数越少越好。类型相同的长参数序列尤其有害。
有两种技术可以缩短太长的参数列表：
a，把一个方法分解成多个方法，每一个方法只要求这些参数的一个子集。
如果不小心的话，这很容易会导致过多的方法，但是通过增加它们功能上的正交性，可以减少方法数目。
b，创建辅助类，用来保存参数的聚集。如果一个频繁出现的参数序列可以被看做代表了某个独特的实体，则建议使用这项技术。

4，对于参数类型，优先使用接口而不是类。
无论什么时候，只要存在可用来定义参数的适当接口，就优先使用这个接口，而不是实现该接口的类。
如果碰巧输入的数据是以其他形式存在的话，则会导致不必要的、可能非常昂贵的拷贝操作。