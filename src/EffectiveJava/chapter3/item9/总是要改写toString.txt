                                                             总是要改写toString

Object提供了toString方法的一个实现，但是它返回的字符串通常并不是类的用户期望看到的。它包含类的名字，以及一个“@”符号，接着是散列码的无符号十六进制表示。

toString的通用约定指出，被返回的字符串应该是一个简洁的、信息丰富的并且易于阅读的表达形式，建议所有的子类都要改写。提供一个好的toString实现，可以是一个类用起来更加愉快。

在实际应用中，toString方法应该返回对象中包含的所有令人感兴趣的信息。如果对象太大，或者对象中包含的状态信息难以用字符串来表达，toString应该返回一个摘要信息。理想情况下，字符串应该是自描述的。

在实现toString的时候，不需要决定是否在文档中指定返回值的格式。对于值类(value class)，比如电话号码类，推荐这样做。同时最好也提供一个相匹配的String构造函数(或者静态工厂)。这样，程序员可以很容易地在对象和它的字符串表示之间来回切换。

指定toString返回值的格式也有不足之处：如果这个类已经被广泛使用了，则一旦你指定了格式，则必须始终如一地坚持这种格式。程序员会解析这种字符串表示，如果在将来的版本中改变了表达形式，则会打破他们的代码和数据，如果不指定格式的话，可以保留灵活性，便于在将来的版本中增加信息，或者改进格式。

不管是否决定指定格式，都应该在JAVA Doc中明确的表明意图。

无论是否指定格式，为toString返回值中包含的所有信息，提供一种编程访问途径，总是一个好的做法。如果不这样做的话，就迫使那么些需要这些信息的程序员不得不自己去解析这些字符串。这会降低程序的性能，解析过程也很容易出错，会导致系统的不稳定，如果格式变了的话，还会导致系统崩溃。如果没有提供这些访问方法，即使已经指明了字符串的格式是可变化的，字符串格式也成了事实上的API。