                                                                                        避免创建重复的对象


重复使用同一个对象，而不是每次需要的时候就创建一个功能上等价的新对象，通常前者更为合适。
重用方式既快速，也更为流行。如果一个对象是非可变的(immutable)，那么它总是可以被重用。
比如String实例，对于所有在同一个虚拟机中运行的代码，只要它们包含相同的字符串字面常量，则该对象就会被重用。

对于同时提供了静态工厂方法和构造函数的非可变类，通常可以利用静态工厂方法而不是构造函数，以避免创建重复的对象。
比如Boolean.valueOf(String)几乎总是优于构造函数Boolean(String)。

除了重用非可变的对象之外，对于那些已知不会被修改的可变对象，也可以重用它们。
示例见ReuseMutableDemo.java

一个适配器对象除了要适配的对象之外，没有其他的状态信息，所以针对某个给定对象的特定适配器而言，它不需要创建多个适配器实例。

通过维护自己的对象池(object pool)来避免对象的创建工作并不是一个好的做法，除非池中的对象是非常重量级的。
一个正确使用对象池的典型例子就是数据库连接池，因为数据库连接的代价是非常昂贵的。
然而一般而言，维护自己的对象池会把代码弄得很乱，增加内存占用，并且还会损害性能。
现代的JVM实现有高度优化的垃圾回收器，其性能很容易就会超过轻量级对象池的性能。