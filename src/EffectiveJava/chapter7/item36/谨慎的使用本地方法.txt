                                                          谨慎的使用本地方法

Java Native Interface(JNI)允许Java应用程序可以调用本地方法。所谓本地方法是指用本地程序设计语言(C或者C++)来编写的特殊方法。本地方法在本地语言中可以执行任意的计算任务，然后返回到Java程序设计语言。

从历史上看，本地方法有三种用途：
1，提供了访问与平台相关的设施的能力，比如访问注册表和文件锁。
2，提供了访问老式代码库和老式数据的能力。
3，应用程序还可以使用本地方法，通过本地语言，实现性能关键的部分，以提高系统的性能。

随着JVM的发展，使用本地方法来提高性能的做法越来越不值得提倡。

使用本地方法有一些严重的缺点：
1，因为本地方法不是安全的，所以使用本地方法的应用程序也不再免受内存损坏错误的影响。
2，因为本地语言是平台相关的，所以使用本地方法的应用程序也不再是自由移植的。对于每一个目标平台，本地代码都必须经过重新编译，也有可能要求做一些修改。
3，在进入和退出本地代码时，也需要较高的固定开销。
4，本地方法编写起来单调乏味，难以阅读。

现在已经很少情况下需要使用本地方法来提高性能。