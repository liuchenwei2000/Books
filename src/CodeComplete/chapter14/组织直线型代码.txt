                               组织直线型代码

要点

组织直线型代码的最主要原则是按照依赖关系进行排列。
可以用好的子程序名、参数列表、注释来让依赖关系变得更明显。
如果代码之间没有顺序依赖关系，那就设法使相关的语句尽可能地接近。


详解

如果语句之间存在依赖关系，并且这些关系要求你把语句按照一定的顺序加以排列，那么请设法使得这些依赖关系变得明显：
1，使子程序名能突显依赖关系
initData();
useData();
2，使用子程序参数明确显示依赖关系
data = readData();
result = calculateResult(data);
printResult(result);
3，用注释对不清晰的依赖关系进行说明

如果代码中的若干语句或语句块的先后顺序看上去完全没有关系。一条语句并不依赖于或者在逻辑上承接另一条语句。
但是顺序的确对可读性、性能和可维护性有影响，而且当缺少执行顺序依赖关系的时候，
你可以用就近原则来判断语句或者代码块的顺序：把相关的操作放在一起。
1，使代码易于自上而下的阅读，而不是跳来跳去
2，把相关的语句组织在一起，你有可能发现它们之间有很强的联系，而与它们前后的语句组没有多少有意义的联系。
这种情况下，你可能希望把这些关联度很强的语句重构成独立的子程序。