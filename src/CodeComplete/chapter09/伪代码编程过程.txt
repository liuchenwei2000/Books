                                                      伪代码编程过程


伪代码是指某种用来描述算法、子程序、类或完整程序的工作逻辑的、非正式的、类似于英语的记法。
伪代码编程过程则是一种通过书写伪代码而更高效的创建程序代码的专门方法。

有效使用伪代码的指导原则：
1，用类似英语的语句来精确描述特定的操作。
2，避免使用目标编程语言中的语法元素。
伪代码能让你在一个比代码本身略高的层次上进行设计，不会受限于不必要的语法上的约束。
3，在本意的层面上编写代码。
用伪代码去描述解决问题的方法的意图，而不是去写如何在目标语言中实现这个方法。
4，在一个足够低的层次上编写伪代码，以便可以近乎自动的从它生成代码。
如果伪代码的层次太高，就会掩盖代码中的问题细节。你应该不断地精化伪代码，加入越来越多的细节，直到看起来已经很容易直接写出代码为止。


伪代码一经写好，就可以依照它去生成代码了，同时还把伪代码变成编程语言中的注释。

使用伪代码的好处：
1，伪代码使得评审更容易，无须检查源代码就可以评审细节设计。
2，伪代码使变更更加容易。短短几行伪代码要比整页的代码更容易修改。
3，伪代码能使给代码做注释的工作量减到最少。
4，伪代码比其他形式的设计文档更容易维护。使用其他方法，设计和代码是分离的，当其中之一变动的时候，两者就不再一致。
而使用伪代码编程过程时，伪代码中的语句将会转变为代码中的注释。
因此只要维护代码间的这些注释，那么这些伪代码所形成的设计文档就仍然是准确的。