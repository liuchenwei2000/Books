                                                                 测试的难点

极限编程指出我们要测试那些有可能会出错的程序。

为什么有些对象看起来很难测试？
1，依赖于其他对象的对象(协作对象)
2，GUI
3，数据库
4，Servlets/EJB

协作对象的依赖性可以通过使用一个接口来打破，比如：

A-->B  A直接依赖B

可以变成  

A-->IB(interface) B实现IB

这样依赖就被倒置了，A和B都依赖于接口IB

这样A就不再需要依赖具体的B了，可以通过一个MockB来测试A。
MockB实现IB，在A的测试类ATest的控制下提供测试环境，甚至是ATest可以自己实现IB来充当测试桩(stub)而不需MockB。

什么时候需要使用桩(stub)？
当真正的对象使用起来很困难的时候，需要使用桩。比如硬件、数据库、依赖的对象没完成。
而Value Object和依赖对象已知可用时不需要使用stub。
桩还可以被用来记录日志和实现NullObject模式。