                                                          尽量使用标准的异常

专家级程序员与缺乏经验的程序员一个最主要的区别是：
专家追求高度的代码重用，并且通常也能实现这样的代码重用。异常也不例外。
Java平台提供了一组基本的未被检查的异常，它们覆盖了绝大多数API抛出异常的需要。

重用现有异常有多方面的好处：
1，使得API更加易于学习和使用，因为它与程序员原来已经熟悉的习惯用法保持一致。
2，对于用到这些API的程序而言，它们的可读性更好，因为它们不会有程序员不熟悉的异常。
3，异常类越少，意味着内存占用越小，并且装载这些类的时间开销也越小。

常用的异常

IllegalArgumentException  非法参数
IllegalStateException     对于这个方法调用而言，对象状态不合适
NullPointException        在null被禁止的情况下参数值为null
IndexOutOfBoundsException 下标越界 
UnsupportedOperationException  对象不支持客户请求的方法

如果一个异常能够满足你的需要，使用它就可以，不过要确保抛出的异常的情况与该异常的文档中描述的情况一致。这种重用必须建立在语义的基础上，而不是名字的基础上。而且，如果你希望增加更多的失败信息，则可以对已有异常子类化。

选择重用哪一个异常并不总是一门精确的科学，因为上面的常用异常的使用场合不是相互排斥的。


所有错误的方法调用都可以被归结为非法参数或者非法状态，但是其他还有一些标准异常也被用某些特定情况下的非法参数和非法状态。如果一个调用者在某个不允许null值的参数中传递了一个null，则习惯的做法是抛出一个NullPointException，而不是IllegalArgumentException。类似的，如果调用者在一个表示序列下标的参数中，传递了一个越界的值，则应该抛出的是IndexOutOfBoundsException，而不是IllegalArgumentException。
